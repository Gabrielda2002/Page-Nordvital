---
import image1 from "@/images/index/Carousel-infinito/iconos-Mesa-de-trabajo-1.webp";
import image2 from "@/images/index/Carousel-infinito/iconos-Mesa-de-trabajo-2.webp";
import image3 from "@/images/index/Carousel-infinito/iconos-Mesa-de-trabajo-3.webp";
import type { ImageMetadata } from "astro";

import { Image } from "astro:assets";

interface CarouselInfiniteItem {
  image: ImageMetadata;
  number: string;
  label: string;
}[]

const carouselInfinite: CarouselInfiniteItem[] = [
  { image: image1, number: "", label: "Medicina General" },
  { image: image2, number: "", label: "Odontología" },
  { image: image3, number: "", label: "Pediatría" },
  { image: image1, number: "", label: "Ginecología Obstetricia" },
  { image: image2, number: "", label: "Medicina Interna" },
  { image: image3, number: "", label: "Otras Especialidades" },
  { image: image2, number: "", label: "Pacientes Atendidos" },
];
---

<div class="relative w-full overflow-hidden">
  <div class="flex animate-scroll" id="carousel-container">
    {
      carouselInfinite.map((contenido) => (
        <div class="flex items-center bg-white rounded-3xl shadow mx-8 flex-shrink-0">
          <div class="flex items-center py-2 px-2">
            <Image src={contenido.image} alt={contenido.label} class=" m-2 h-8 w-9" widths={[108]} sizes='36px' />
          </div>
          <div class="rounded-3xl bg-gradient-to-l from-[#00BFB3] to-sky-500 h-16 text-white py-2 px-4 text-center content-center flex mx-auto">
            <div class="content-center">
            <span class="text-xl font-bold m-2">{contenido.number}</span>
            </div>
            <div class="text-base mx-auto w-28 font-semibold content-center">{contenido.label}
            </div>
          </div>
        </div>
      ))
    }
  </div>
</div>
<style>
  @keyframes scroll {
    100% {
      transform: translateX(-50%);
    }
  }

  .animate-scroll {
    animation: scroll 50s linear infinite;
    -webkit-animation: scroll 50s linear infinite;
  }

  #carousel-container {
    width: max-content;
  }

  #carousel-container:hover {
    animation-play-state: paused;
  }
</style>

<script>
  const container = document.getElementById("carousel-container");
  if (container) {
    const items = container.innerHTML;
    container.innerHTML = items + items;

    container.addEventListener("touchstart", () => {
      container.style.animationPlayState = "paused";
    });

    container.addEventListener("touchend", () => {
      container.style.animationPlayState = "running";
    });
  }
</script>
