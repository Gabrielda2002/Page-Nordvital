---
import Button from "./Button.astro";

interface Props {
  title: string;
  description: string;
  image: string;
  uniqueId: string;
}

const { title, description, image, uniqueId } = Astro.props;
---

<div class="border border-b rounded-xl shadow-xl p-3 gap-4">
  <div class="grid grid-cols-1 lg:grid-cols-[38%_60%]">
    <div class="flex justify-center items-center">
      <img src={image} alt={`img ${title}`} class="w-[210px] h-[210px]" />
    </div>
    <div>
      <h4 class="text-2xl font-bold text-start mb-3">
        {title}
      </h4>
      <p>
        {description}
        <div class="flex justify-center items-center mt-5">
          <button
            data-target=`content-${uniqueId}`
            class="show-more bg-teal-500 max-w-28 text-white rounded-xl px-2.5 py-1.5 text-center text-sm md:text-base hover:bg-teal-600 transition-colors"
          >
             <span class="text-show">Ver m√°s</span>
             <span class="text-hide hidden">Ver Menos</span>
          </button>
        </div>
      </p>
    </div>
  </div>
  <div
    class="content-expandible grid-rows-[0fr] transition-all duration-300 ease-in-out"
    id=`content-${uniqueId}`
  >
  <div class="overflow-hidden">
    <slot />
  </div>
  </div>
</div>
<script>
  const buttons = document.querySelectorAll(".show-more");

  buttons.forEach((button) => {
    button.addEventListener("click", () => {
      const targetId = button.getAttribute("data-target");
      if (targetId) {
        const content = document.getElementById(targetId);
        const textShow = button.querySelector(".text-show");
        const textHide = button.querySelector(".text-hide");

        content?.classList.toggle('grid-rows-[1fr]')
        content?.classList.toggle('opacity-100')

        textShow?.classList.toggle('hidden')
        textHide?.classList.toggle('hidden')
      }
    });
  });
</script>
<style>
  .content-expandible {
    display: grid;
    transition: grid-template-rows 300ms ease-in-out, opacity 300ms ease-in-out;
  }
</style>
