---
// Props: year (número), documents (array de objetos { name, file })

interface Props {
  year: number;
  documents: Array<{
    name: string;
    file: string;
  }>;
}

const { year, documents } = Astro.props;
const hasMoreDocs = documents.length > 4;
---

<section class="estados__item bg-white p-6 rounded-lg shadow-lg">
  <nav class="nav__estado">
    <h1 class="text-3xl font-semibold text-gray-700 mb-4">{year}</h1>
    
    <ul class="space-y-3 doc-list">
      {documents.slice(0, 4).map(doc => (
        <li>
          <a
            href={doc.file}
            target="_blank"
            rel="noopener noreferrer"
            class="text-blue-500 hover:text-blue-700"
          >
            {doc.name}
          </a>
        </li>
      ))}
    </ul>
    
    {hasMoreDocs && (
      <>
        <ul class="space-y-3 hidden-docs hidden">
          {documents.slice(4).map(doc => (
            <li>
              <a
                href={doc.file}
                target="_blank"
                rel="noopener noreferrer"
                class="text-blue-500 hover:text-blue-700"
              >
                {doc.name}
              </a>
            </li>
          ))}
        </ul>
        
        <button id={`ver-mas-${year}`} class="px-2 mt-6 py-1 bg-teal-500 text-white rounded-md hover:bg-teal-600 trasnition-all duration-300">
          Ver más
        </button>
      </>
    )}
  </nav>
</section>

<style>
  .hidden {
    display: none;
  }
</style>

<script define:vars={{ year, hasMoreDocs }}>
  // Solo ejecutar el script si hay más de 4 documentos
  if (hasMoreDocs) {
    const button = document.getElementById(`ver-mas-${year}`);
    const hiddenDocs = button.previousElementSibling;
    
    button.addEventListener('click', () => {
      hiddenDocs.classList.toggle('hidden');
      button.textContent = hiddenDocs.classList.contains('hidden') ? 'Ver más' : 'Ver menos';
    });
  }
</script>
